package malware.scan;

import io.orchestrate.client.Client;
import io.orchestrate.client.OrchestrateClient;
import org.ahocorasick.trie.Emit;
import org.ahocorasick.trie.Trie;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collection;

import static org.junit.Assert.*;

/**
 * Created by Radoslav Ralinov on 21/03/2016. All rights reserved. Created as part of the Third Year Project
 * at University of Manchester. Third-Year-Project
 */
public class SignatureCompareUpdateTest {
    private static final Client client = OrchestrateClient.builder("e4f5cbf3-991a-41ab-aa6e-346d53c0ac2b").host("https://api.aws-eu-west-1.orchestrate.io").build();

    @Test
    public void testCompareHashSignatures() throws Exception {
        ArrayList<HashSignature> signatures = SignatureCompareUpdate.compareHashSignatures(client, 68);
        assertFalse(signatures.isEmpty());
    }

    @Test
    public void testCompareByteSignatures() throws Exception {
        Trie trie = SignatureCompareUpdate.constructTrie(client);
        byte[] firstFourKilobytes = new byte[7000];
        File file = new File("D:\\eicar.com");
        InputStream input = new FileInputStream(file);
        //noinspection ResultOfMethodCallIgnored
        input.read(firstFourKilobytes);
        input.close();
        boolean actual = SignatureCompareUpdate.compareByteSignatures(firstFourKilobytes, trie);
        assertEquals(true, actual);
    }

    @Test
    public void testConstructTrie() throws Exception {
        Trie trie = SignatureCompareUpdate.constructTrie(client);
        Collection<Emit> emits = trie.parseText("dsbnfvasdbfvhgdsvafv");
        assertFalse(emits.isEmpty());
    }

    @Test
    public void testUpdateSignatureDatabase() throws Exception {
        boolean actual = SignatureCompareUpdate
            .updateSignatureDatabase(client, "5CD614D33CAAE9108E1B76C0071EE8387AD8D292FB1D9762B34CB2F8A93933F2", "test1", 37);
        assertEquals(true, actual);
    }
}